WinesCount:
  get:
    summary: Get wine count.
    description: Returns total count of wines in the application.
    operationId: count
    tags: [wines-info]
    responses:
      200:
        description: Fetched wine count.
        content:
          application/json:
            schema:
              type: integer

WinesCountries:
  get:
    summary: Get list of distinct countries.
    description: Returns list of all distinct countries found in all wines.
    operationId: findCountries
    tags: [wines-info]
    responses:
      200:
        $ref: ./responses.yaml#/StringList

WinesDescriptions:
  get:
    summary: Get list of distinct wine descriptions.
    description: Returns list of all distinct wine descriptions found as wine attributes.
    operationId: findDescriptions
    tags: [wines-info]
    responses:
      200:
        $ref: ./responses.yaml#/StringList

WinesFoodPairings:
  get:
    summary: Get list of distinct food pairings.
    description: Returns list of all distinct wine-food pairings found as wine attributes.
    operationId: findFoodPairings
    tags: [wines-info]
    responses:
      200:
        $ref: ./responses.yaml#/StringList

# This should be a POST
ValidateName:
  parameters:
  - in: query
    name: name
    description: Wine name to validate.
    required: true
    schema:
      type: string
      minLength: 1
  get:
    summary: Validate wine's name.
    description: Check that wine's name is unique. TODO change to POST.
    operationId: validateName
    tags: [wines-info]
    responses:
      200:
        description: Checked if wine's name is unique.
        content:
          application/json:
            schema:
              type: boolean
