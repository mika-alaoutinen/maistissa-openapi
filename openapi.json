{
  "openapi" : "3.0.3",
  "info" : {
    "title" : "Maistissa backend",
    "version" : "1.1.0"
  },
  "servers" : [ {
    "url" : "http://localhost:8082/api"
  } ],
  "tags" : [ {
    "description" : "CRUD operations for wines.",
    "name" : "wines-crud"
  }, {
    "description" : "Operations for finding information regarding wines.",
    "name" : "wines-info"
  }, {
    "description" : "Wine search functionality.",
    "name" : "wines-search"
  } ],
  "paths" : {
    "/wines" : {
      "get" : {
        "description" : "Returns all wines ordered alphabetically by name.",
        "operationId" : "findAll",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/Wine"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "Fetched all wines."
          }
        },
        "summary" : "Get all wines.",
        "tags" : [ "wines-crud" ]
      },
      "post" : {
        "description" : "Add new wine.",
        "operationId" : "add",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Wine"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Wine"
                }
              }
            },
            "description" : "Created new wine."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorBody"
                }
              }
            },
            "description" : "HTTP 400. Request body was malformed."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorBody"
                }
              }
            },
            "description" : "HTTP 401. Request was unauthorized."
          }
        },
        "summary" : "Add new wine.",
        "tags" : [ "wines-crud" ]
      }
    },
    "/wines/{id}" : {
      "delete" : {
        "description" : "Delete a single wine.",
        "operationId" : "delete",
        "responses" : {
          "204" : {
            "description" : "Successfully deleted wine."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorBody"
                }
              }
            },
            "description" : "HTTP 401. Request was unauthorized."
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorBody"
                }
              }
            },
            "description" : "HTTP 404. Could not find resource with given id."
          }
        },
        "summary" : "Delete wine.",
        "tags" : [ "wines-crud" ]
      },
      "get" : {
        "description" : "Get a single wine.",
        "operationId" : "find",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Wine"
                }
              }
            },
            "description" : "Found wine with given ID."
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorBody"
                }
              }
            },
            "description" : "HTTP 404. Could not find resource with given id."
          }
        },
        "summary" : "Get a single wine.",
        "tags" : [ "wines-crud" ]
      },
      "parameters" : [ {
        "description" : "Wine ID.",
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "type" : "integer"
        }
      } ],
      "put" : {
        "description" : "Update a single wine.",
        "operationId" : "update",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Wine"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Wine"
                }
              }
            },
            "description" : "Successfully updated wine."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorBody"
                }
              }
            },
            "description" : "HTTP 400. Request body was malformed."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorBody"
                }
              }
            },
            "description" : "HTTP 401. Request was unauthorized."
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorBody"
                }
              }
            },
            "description" : "HTTP 404. Could not find resource with given id."
          }
        },
        "summary" : "Update wine.",
        "tags" : [ "wines-crud" ]
      }
    },
    "/wines/{id}/editable" : {
      "get" : {
        "description" : "Get a single wine.",
        "operationId" : "isEditable",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "boolean"
                }
              }
            },
            "description" : "Boolean indicating if wine can be edited by user."
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorBody"
                }
              }
            },
            "description" : "HTTP 404. Could not find resource with given id."
          }
        },
        "summary" : "Get a single wine.",
        "tags" : [ "wines-crud" ]
      },
      "parameters" : [ {
        "description" : "Wine ID.",
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "type" : "integer"
        }
      } ]
    },
    "/wines/count" : {
      "get" : {
        "description" : "Returns total count of wines in the application.",
        "operationId" : "count",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "integer"
                }
              }
            },
            "description" : "Fetched wine count."
          }
        },
        "summary" : "Get wine count.",
        "tags" : [ "wines-info" ]
      }
    },
    "/wines/countries" : {
      "get" : {
        "description" : "Returns list of all distinct countries found in all wines.",
        "operationId" : "findCountries",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "type" : "string"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "Fetched list of countries."
          }
        },
        "summary" : "Get list of distinct countries.",
        "tags" : [ "wines-info" ]
      }
    },
    "/wines/descriptions" : {
      "get" : {
        "description" : "Returns list of all distinct wine descriptions found as wine attributes.",
        "operationId" : "findDescriptions",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "type" : "string"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "Fetched list of wine descriptions."
          }
        },
        "summary" : "Get list of distinct wine descriptions.",
        "tags" : [ "wines-info" ]
      }
    },
    "/wines/food-pairings" : {
      "get" : {
        "description" : "Returns list of all distinct wine-food pairings found as wine attributes.",
        "operationId" : "findFoodPairings",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "type" : "string"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "Fetched list of wine-food pairings."
          }
        },
        "summary" : "Get list of distinct food pairings.",
        "tags" : [ "wines-info" ]
      }
    },
    "/wines/validate" : {
      "get" : {
        "description" : "Check that wine's name is unique. TODO change to POST.",
        "operationId" : "validateName",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "boolean"
                }
              }
            },
            "description" : "Checked if wine's name is unique."
          }
        },
        "summary" : "Validate wine's name.",
        "tags" : [ "wines-info" ]
      }
    },
    "/wines/search" : {
      "get" : {
        "description" : "Search for wines based on their name, type, countries, volumes and prices.",
        "operationId" : "search",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/Wine"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "Fetched wines that meet the search criteria."
          }
        },
        "summary" : "Search wines.",
        "tags" : [ "wines-search" ]
      },
      "parameters" : [ {
        "description" : "Wine name.",
        "in" : "query",
        "name" : "name",
        "schema" : {
          "type" : "string"
        }
      }, {
        "description" : "Wine type.",
        "in" : "query",
        "name" : "type",
        "schema" : {
          "enum" : [ "RED", "ROSE", "WHITE", "SPARKLING", "OTHER" ],
          "type" : "string"
        }
      }, {
        "description" : "List of countries.",
        "in" : "query",
        "name" : "countries",
        "schema" : {
          "items" : {
            "type" : "string"
          },
          "minLength" : 1,
          "type" : "array"
        }
      }, {
        "description" : "List of volumes (i.e. wine's package size).",
        "in" : "query",
        "name" : "volumes",
        "schema" : {
          "items" : {
            "type" : "number"
          },
          "minimum" : 0,
          "type" : "array"
        }
      }, {
        "description" : "Desired price range, given as [min, max]. Must have exactly two values.",
        "in" : "query",
        "name" : "priceRange",
        "schema" : {
          "items" : {
            "type" : "number"
          },
          "maximum" : 2,
          "minimum" : 2,
          "type" : "array"
        }
      } ]
    }
  },
  "components" : {
    "schemas" : {
      "Wine" : {
        "description" : "A wine resource.",
        "properties" : {
          "id" : {
            "minimum" : 1,
            "type" : "integer"
          },
          "name" : {
            "minLength" : 1,
            "type" : "string"
          },
          "type" : {
            "enum" : [ "RED", "ROSE", "WHITE", "SPARKLING", "OTHER" ],
            "type" : "string"
          },
          "country" : {
            "minLength" : 1,
            "type" : "string"
          },
          "price" : {
            "minimum" : 0,
            "type" : "number"
          },
          "volume" : {
            "minimum" : 0,
            "type" : "number"
          },
          "description" : {
            "description" : "Wine's description contains a list of keywords or phrases.",
            "items" : {
              "type" : "string"
            },
            "minLength" : 0,
            "type" : "array"
          },
          "foodPairings" : {
            "description" : "Food pairing recommendations.",
            "items" : {
              "type" : "string"
            },
            "minLength" : 0,
            "type" : "array"
          },
          "url" : {
            "description" : "Link to external resource about the wine.",
            "format" : "url",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "ErrorBody" : {
        "description" : "A generic error response.",
        "properties" : {
          "timestamp" : {
            "format" : "datetime",
            "type" : "string"
          },
          "status" : {
            "type" : "integer"
          },
          "error" : {
            "type" : "string"
          },
          "path" : {
            "type" : "string"
          }
        },
        "type" : "object"
      }
    }
  }
}